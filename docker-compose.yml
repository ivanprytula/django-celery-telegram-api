version: "3.8"
services:

  db:
    image: "postgres"
    ports:
      - "5432"
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./deploy/dev/.env

  web:
    build:
      context: .
    volumes:
      - ./project/:/usr/src/app
    #  maps ports and container code/database to local filesystem
    ports:
      - "8000:8000"
    restart: always
    env_file:
      - ./deploy/dev/.env
    command: >
      sh -c "python3 manage.py wait_for_db &&
             python3 manage.py migrate &&
             python3 manage.py runserver 0.0.0.0:8000"
    depends_on:
      - db
      - redis

  redis:
    image: redis:alpine

  celery:
    build: .
    user: "${UID}:${GID}"
    command: >
      sh -c "celery -A core_config worker -l INFO -f logs/celery.log"
    volumes:
      - ./project/:/usr/src/app/
    restart: always
    env_file:
      - ./deploy/dev/.env
    depends_on:
      - web
      - redis

  celery-beat:
    build: .
    command: >
      sh -c "celery -A core_config beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
    volumes:
      - ./project/:/usr/src/app/
    restart: always
    env_file:
      - ./deploy/dev/.env
    depends_on:
      - web
      - redis

  flower_dashboard:
    build: .
    command: celery -A core_config --broker=redis://redis:6379/0 flower --port=5555
    ports:
      - "5555:5555"
    restart: always
    env_file:
      - ./deploy/dev/.env
    depends_on:
      - web
      - redis
      - celery

volumes:
  postgres_data: